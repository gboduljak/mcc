{
    "program": [
        "\u0000"
    ],
    "construct": [
        "Struct",
        "Int",
        "Double",
        "Char",
        "Void",
        "\u0000"
    ],
    "construct_list": [
        "\u0000"
    ],
    "includes_list": [
        "Struct",
        "Int",
        "Double",
        "Char",
        "Void",
        "\u0000"
    ],
    "include": [
        "Include",
        "Struct",
        "Int",
        "Double",
        "Char",
        "Void",
        "\u0000"
    ],
    "structdecl": [
        "Struct",
        "Int",
        "Double",
        "Char",
        "Void",
        "\u0000"
    ],
    "vardecl_list": [
        "RBrace"
    ],
    "vardecl": [
        "Struct",
        "Int",
        "Double",
        "Char",
        "Void",
        "RBrace",
        "Else",
        "\u0000",
        "While",
        "For",
        "If",
        "Return",
        "LBrace",
        "LParen",
        "Minus",
        "Not",
        "Asterisk",
        "Ampers",
        "Sizeof",
        "LitInt",
        "LitString",
        "LitChar",
        "LitDouble",
        "LitNull",
        "Ident"
    ],
    "funcdecl": [
        "Struct",
        "Int",
        "Double",
        "Char",
        "Void",
        "\u0000"
    ],
    "funcdefn": [
        "Struct",
        "Int",
        "Double",
        "Char",
        "Void",
        "\u0000"
    ],
    "type": [
        "Ident",
        "LBrack",
        "RParen"
    ],
    "sizeoftype": [
        "RParen"
    ],
    "primitive_type": [
        "Ident",
        "LBrack",
        "RParen"
    ],
    "struct_type": [
        "Ident",
        "LBrack",
        "RParen"
    ],
    "BuiltinType": [
        "Asterisk",
        "Ident",
        "LBrack",
        "RParen"
    ],
    "formals": [
        "RParen",
        "Comma"
    ],
    "formal": [
        "RParen",
        "Comma"
    ],
    "stmt": [
        "Else",
        "While",
        "For",
        "If",
        "Return",
        "LBrace",
        "Struct",
        "Int",
        "Double",
        "Char",
        "Void",
        "LParen",
        "Minus",
        "Not",
        "Asterisk",
        "Ampers",
        "Sizeof",
        "LitInt",
        "LitString",
        "LitChar",
        "LitDouble",
        "LitNull",
        "Ident",
        "RBrace"
    ],
    "block": [
        "Struct",
        "Int",
        "Double",
        "Char",
        "Void",
        "\u0000",
        "Else",
        "While",
        "For",
        "If",
        "Return",
        "LBrace",
        "LParen",
        "Minus",
        "Not",
        "Asterisk",
        "Ampers",
        "Sizeof",
        "LitInt",
        "LitString",
        "LitChar",
        "LitDouble",
        "LitNull",
        "Ident",
        "RBrace"
    ],
    "block_stmts": [
        "RBrace"
    ],
    "opt_expr": [
        "Semi",
        "RParen"
    ],
    "expr": [
        "Semi",
        "RParen",
        "RBrack",
        "Comma"
    ],
    "assignment_level_expr": [
        "Semi",
        "RParen",
        "RBrack",
        "Comma"
    ],
    "logical_or_level_expr": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "RBrack",
        "Comma"
    ],
    "logical_and_level_expr": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "And",
        "RBrack",
        "Comma"
    ],
    "bitwise_or_level_expr": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "And",
        "Bar",
        "RBrack",
        "Comma"
    ],
    "xor_level_expr": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "And",
        "Bar",
        "Caret",
        "RBrack",
        "Comma"
    ],
    "bitwise_and_level_expr": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "And",
        "Bar",
        "Caret",
        "Ampers",
        "RBrack",
        "Comma"
    ],
    "eq_level_expr": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "And",
        "Bar",
        "Caret",
        "Ampers",
        "Eq",
        "Neq",
        "RBrack",
        "Comma"
    ],
    "comp_level_expr": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "And",
        "Bar",
        "Caret",
        "Ampers",
        "Eq",
        "Neq",
        "Less",
        "Leq",
        "Greater",
        "Geq",
        "RBrack",
        "Comma"
    ],
    "add_level_expr": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "And",
        "Bar",
        "Caret",
        "Ampers",
        "Eq",
        "Neq",
        "Less",
        "Leq",
        "Greater",
        "Geq",
        "Plus",
        "Minus",
        "RBrack",
        "Comma"
    ],
    "mult_level_expr": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "And",
        "Bar",
        "Caret",
        "Ampers",
        "Eq",
        "Neq",
        "Less",
        "Leq",
        "Greater",
        "Geq",
        "Plus",
        "Minus",
        "Asterisk",
        "Div",
        "Mod",
        "RBrack",
        "Comma"
    ],
    "cast_level_expr": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "And",
        "Bar",
        "Caret",
        "Ampers",
        "Eq",
        "Neq",
        "Less",
        "Leq",
        "Greater",
        "Geq",
        "Plus",
        "Minus",
        "Asterisk",
        "Div",
        "Mod",
        "RBrack",
        "Comma"
    ],
    "unary_level_expr": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "And",
        "Bar",
        "Caret",
        "Ampers",
        "Eq",
        "Neq",
        "Less",
        "Leq",
        "Greater",
        "Geq",
        "Plus",
        "Minus",
        "Asterisk",
        "Div",
        "Mod",
        "RBrack",
        "Comma"
    ],
    "deref": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "And",
        "Bar",
        "Caret",
        "Ampers",
        "Eq",
        "Neq",
        "Less",
        "Leq",
        "Greater",
        "Geq",
        "Plus",
        "Minus",
        "Asterisk",
        "Div",
        "Mod",
        "RBrack",
        "Comma"
    ],
    "addressof": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "And",
        "Bar",
        "Caret",
        "Ampers",
        "Eq",
        "Neq",
        "Less",
        "Leq",
        "Greater",
        "Geq",
        "Plus",
        "Minus",
        "Asterisk",
        "Div",
        "Mod",
        "RBrack",
        "Comma"
    ],
    "typecast": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "And",
        "Bar",
        "Caret",
        "Ampers",
        "Eq",
        "Neq",
        "Less",
        "Leq",
        "Greater",
        "Geq",
        "Plus",
        "Minus",
        "Asterisk",
        "Div",
        "Mod",
        "RBrack",
        "Comma"
    ],
    "sizeof": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "And",
        "Bar",
        "Caret",
        "Ampers",
        "Eq",
        "Neq",
        "Less",
        "Leq",
        "Greater",
        "Geq",
        "Plus",
        "Minus",
        "Asterisk",
        "Div",
        "Mod",
        "RBrack",
        "Comma"
    ],
    "call_level_expr": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "And",
        "Bar",
        "Caret",
        "Ampers",
        "Eq",
        "Neq",
        "Less",
        "Leq",
        "Greater",
        "Geq",
        "Plus",
        "Minus",
        "Asterisk",
        "Div",
        "Mod",
        "Ident",
        "LBrack",
        "Dot",
        "Arrow",
        "RBrack",
        "Comma"
    ],
    "funccall": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "And",
        "Bar",
        "Caret",
        "Ampers",
        "Eq",
        "Neq",
        "Less",
        "Leq",
        "Greater",
        "Geq",
        "Plus",
        "Minus",
        "Asterisk",
        "Div",
        "Mod",
        "Ident",
        "LBrack",
        "Dot",
        "Arrow",
        "RBrack",
        "Comma"
    ],
    "arrayaccess": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "And",
        "Bar",
        "Caret",
        "Ampers",
        "Eq",
        "Neq",
        "Less",
        "Leq",
        "Greater",
        "Geq",
        "Plus",
        "Minus",
        "Asterisk",
        "Div",
        "Mod",
        "Ident",
        "LBrack",
        "Dot",
        "Arrow",
        "RBrack",
        "Comma"
    ],
    "fieldaccess": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "And",
        "Bar",
        "Caret",
        "Ampers",
        "Eq",
        "Neq",
        "Less",
        "Leq",
        "Greater",
        "Geq",
        "Plus",
        "Minus",
        "Asterisk",
        "Div",
        "Mod",
        "Ident",
        "LBrack",
        "Dot",
        "Arrow",
        "RBrack",
        "Comma"
    ],
    "indirect": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "And",
        "Bar",
        "Caret",
        "Ampers",
        "Eq",
        "Neq",
        "Less",
        "Leq",
        "Greater",
        "Geq",
        "Plus",
        "Minus",
        "Asterisk",
        "Div",
        "Mod",
        "Ident",
        "LBrack",
        "Dot",
        "Arrow",
        "RBrack",
        "Comma"
    ],
    "base_expr": [
        "Assign",
        "Semi",
        "RParen",
        "Or",
        "And",
        "Bar",
        "Caret",
        "Ampers",
        "Eq",
        "Neq",
        "Less",
        "Leq",
        "Greater",
        "Geq",
        "Plus",
        "Minus",
        "Asterisk",
        "Div",
        "Mod",
        "Ident",
        "LBrack",
        "Dot",
        "Arrow",
        "RBrack",
        "Comma"
    ],
    "actuals": [
        "RParen",
        "Comma"
    ],
    "array_sizes": [
        "Semi",
        "LBrack",
        "RParen"
    ],
    "stars": [
        "Ident",
        "LBrack",
        "RParen"
    ]
}