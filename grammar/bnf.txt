program ::= includes_list construct_list EOF

construct ::= structdecl
            | vardecl
            | funcdecl

construct_list ::= construct construct_list
                 | ε                   

includes_list ::= include includes_list
                | ε
include ::= Include LitString

structdecl ::= structtype LBrace vardecl_list_nonempty RBrace Semi

vardecl_list ::= vardecl vardecl_list    
               | ε
vardecl_list_nonempty ::= vardecl vardecl_list

vardecl := type Ident Semi
         | type Ident LBrack LitInt RBrack Semi

funcdecl ::= type Ident LParen formals RParen block

type ::= primitivetype
       | structtype

primitivetype ::= (Type BuiltinType) stars
structtype    ::= Struct Ident stars

BuiltinType ::= Int
              | Double
              | Char
              | Void

stars ::= Asterisk stars
        | ε

formals ::= formal formals_list
          | ε
formal ::= type Ident
formals_list ::= Comma formal formals_list
               | ε

stmt ::= block
       | While LParen expr RParen stmt
       | For LParen opt_expr Semi expr Semi opt_expr RParen stmt
       | If LParen expr RParen stmt opt_else
       | Return opt_expr Semi
       | expr Assign expr Semi
       | expr Semi

block ::= LBrace block_elements_list RBrace

block_elements_list ::= block_element block_elements_list
                      | ε

block_element ::= vardecl 
                | stmt

opt_else ::= Else stmt
           | ε
opt_expr ::= expr
           | ε

expr ::= LitInt
       | LitString
       | LitChar
       | LitDouble
       | LitNull
       | Ident
       | (expr)
       | expr op expr
       | Minus expr
       | Not expr
       | arrayaccess
       | fieldaccess
       | deref
       | addressof
       | funccall
       | sizeof
       | typecast
       
op ::= Less
     | Leq
     | Greater
     | Geq
     | Neq
     | Equal
     | Plus
     | Minus
     | Div
     | Asterisk
     | Mod
     | Or
     | And
     | Caret
     | Ampers
     | Bar

funccall    ::= Ident LParen actuals RParen
arrayaccess ::= expr LBrack expr RBrack
fieldaccess ::= expr Dot Ident
              | expr Arrow Ident
deref       ::= Asterisk expr
addressof   ::= Ampers expr
sizeof      ::= Sizeof LParen type RParen
typecast    ::= LParen type RParen expr

actuals ::= expr actuals_list
          | ε

actuals_list ::= Comma expr 
               | ε